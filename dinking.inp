
TITLE:
!e1_16 & e1_1722 (RECOGBEGIN): How often can this child recognize the beginning sound of a word? For example, can this child tell you that the word 'ball' starts with the 'buh' sound?;
!e2_22 (SAMESOUND): How often can this child come up with words that start with the same sound? For example, can this child come up with 'sock' and 'sun'?;
!e3_1621 (RHYMEWORD): How well can this child come up with words that rhyme? For example, can this child come up with 'cat' and 'mat?;
!e3_22 (RHYMEWORD_R): Can this child rhyme words?;
!e4_16 & e4_1722 (RECOGABC): About how many letters of the alphabet can this child recognize?;
!e5_16 & e5 (WriteName): How often can this child write their first name, even if some of the letters aren't quite right or are backwards?;
!e6_22 (READONEDIGIT): How often can this child read one-digit numbers? For example, can this child read the numbers 2 or 8?;
!e7_1621 (COUNTTO): How high can this child count?;
!e7_22 (COUNTTO_R): If asked to count objects, how high can this child count correctly?;
!e8_22 (GROUPOFOBJECTS): How often can this child tell which group of objects has more? For example, can this child tell you a group of seven blocks has more than a group of four blocks?;
!e9_22 (SIMPLEADDITION): How often can this child correctly do simple addition? For example, can this child tell you that two blocks and three blocks add to a total of five blocks?;

DATA:
FILE = dinking.dat;

VARIABLE:
NAMES = recnum year stratfip hhid fwc age e1_16 e1_1722 e2_22 e3_1621 e3_22
   e4_16 e4_1722 e5_16 e5_1722 e6_22 e7_1621 e7_22 e8_22 e9_22;
USEV = e1_16 e1_1722 e2_22 e3_1621 e3_22 e4_16 e4_1722 e5_16 e5_1722 e6_22
   e7_1621 e7_22 e8_22 e9_22;
CATEGORICAL = e1_16 e1_1722 e2_22 e3_1621 e3_22 e4_16 e4_1722 e5_16 e5_1722
   e6_22 e7_1621 e7_22 e8_22 e9_22;
MISSING = .;
IDVARIABLE = recnum;
STRATIFICATION = stratfip;
CLUSTER = hhid;
WEIGHT = fwc;

ANALYSIS:
TYPE = complex;
ESTIMATOR = mlr;
ALGORITHM = integration;
INTEGRATION = gauss(8);
LINK = probit;
PROCESSORS = 4;

MODEL:

!e1_16 & e1_1722 (RECOGBEGIN; 2016: _1, 2017-22: _2);
   EL by e1_16*1 e1_1722*1 (le1);
   [e1_16$1* e1_1722$1*] (t1e1_1 t1e1_2);
   [e1_16$2* e1_1722$2*] (t2e1_1 t2e1_2);
            [e1_1722$3*] (t3e1_2);
   [e1_16$3* e1_1722$4*] (t3e1_1 t4e1_2);

!e2_22 (SAMESOUND);
   EL by e2_22*1 (le2);
   [e2_22$1*] (t1e2);
   [e2_22$2*] (t2e2);
   [e2_22$3*] (t3e2);
   [e2_22$4*] (t4e2);

!e3: RHYMEWORD (2016-2021; _1) & RHYMEWORD_R (2022; _2);
   EL by e3_1621*1 e3_22*1 (le3_1 le3_2);
   [e3_1621$1* e3_22$1*] (t1e3_1 t1e3_2);
              [e3_22$2*] (t2e3_2);
              [e3_22$3*] (t3e3_2);

!e4_16 & e4_1722 (RECOGABC: 2016: _1, 2017-22: _2);
   EL by e4_16*1 e4_1722*1 (le4);
   [e4_16$1* e4_1722$1*] (t1e4_1 t1e4_2);
   [e4_16$2* e4_1722$2*] (t2e4_1 t2e4_2);
            [e4_1722$3*] (t3e4_2);
   [e4_16$3* e4_1722$4*] (t3e4_1 t4e4_2);

!e5_16 & e5 (WriteName):;
   EL by e5_16*1 e5_1722*1 (le5);
   [e5_16$1* e5_1722$1*] (t1e5_1 t1e5_2);
   [e5_16$2* e5_1722$2*] (t2e5_1 t2e5_2);
            [e5_1722$3*] (t3e5_2);
   [e5_16$3* e5_1722$4*] (t3e5_1 t4e5_2);

!e6_22 (READONEDIGIT);
   EL by e6_22*1 (le6);
   [e6_22$1*] (t1e6);
   [e6_22$2*] (t2e6);
   [e6_22$3*] (t3e6);
   [e6_22$4*] (t4e6);

!e7: COUNTTO (2016-2021) COUNTTO_R (2022);
   EL by e7_1621*1 e7_22*1 (le7_1 le7_2);
   [e7_1621$1* e7_22$1*] (t1e7_1 t1e7_2);
   [e7_1621$2* e7_22$2*] (t2e7_1 t2e7_2);
   [e7_1621$3* e7_22$3*] (t3e7_1 t3e7_2);
   [e7_1621$4* e7_22$4*] (t4e7_1 t4e7_2);
   [e7_1621$5*] (t5e7_1);

!e8_22 (GROUPOFOBJECTS);
   EL by e8_22*1 (le8);
   [e8_22$1*] (t1e8);
   [e8_22$2*] (t2e8);
   [e8_22$3*] (t3e8);
   [e8_22$4*] (t4e8);

!e9 (SIMPLEADDITION);
   EL by e9_22*1 (le9);
   [e9_22$1*] (t1e9);
   [e9_22$2*] (t2e9);
   [e9_22$3*] (t3e9);
   [e9_22$4*] (t4e9);

EL@1;
[EL@0];

MODEL PRIORS:

!e1_16 & e1_1722 (RecogBegin);
   diff(t1e1_1, t1e1_2)~ALF(0,1);
   diff(t2e1_1, t2e1_2)~ALF(0,1);
   diff(t3e1_1, t4e1_2)~ALF(0,1);

!e3: RHYMEWORD (2016-2021; _1) & RHYMEWORD_R (2022; _2);
   diff(le3_1,le3_2)~ALF(0,1);

!e4_16 & e4_1722 (RECOGABC: 2016: _1, 2017-22: _2;
   diff(t1e4_1, t1e4_2)~ALF(0,1);
   diff(t2e4_1, t2e4_2)~ALF(0,1);
   diff(t3e4_1, t4e4_2)~ALF(0,1);

!e5_16 & e5 (WriteName);
   diff(t1e5_1, t1e5_2)~ALF(0,1);
   diff(t2e5_1, t2e5_2)~ALF(0,1);
   diff(t3e5_1, t4e5_2)~ALF(0,1);

!e7: COUNTTO (2016-2021) & COUNTTO_R (2022);
   diff(le7_1,le7_2)~ALF(0,1);
   diff(t1e7_1, t1e7_2)~ALF(0,1);
   diff(t2e7_1, t2e7_2)~ALF(0,1);
   diff(t3e7_1, t3e7_2)~ALF(0,1);

MODEL CONSTRAINT:

!e1_16 & e1_1722 (RecogBegin);
   new(dt1e1*0 dt2e1*0 dt3e1*0);
   dt1e1 = t1e1_1-t1e1_2;
   dt2e1 = t2e1_1-t2e1_2;
   dt3e1 = t3e1_1-t4e1_2;

!e3: RHYMEWORD (2016-2021; _1) & RHYMEWORD_R (2022; _2);
   new(dle3*0);
   dle3 = le3_1-le3_2;

!e4_16 & e4_1722 (RECOGABC: 2016: _1, 2017-22: _2;
   new(dt1e4*0 dt2e4*0 dt3e4*0);
   dt1e4 = t1e4_1-t1e4_2;
   dt2e4 = t2e4_1-t2e4_2;
   dt3e4 = t3e4_1-t4e4_2;

!e5_16 & e5 (WriteName);
   new(dt1e5* dt2e5* dt3e5*);
   dt1e5 = t1e5_1-t1e5_2;
   dt2e5 = t2e5_1-t2e5_2;
   dt3e5 = t3e5_1-t4e5_2;

!e7: COUNTTO (2016-2021) & COUNTTO_R (2022);
   new(dle7*0 dt1e7*0 dt2e7*0 dt3e7*0);
   dle7 = le7_1-le7_2;
   dt1e7 = t1e7_1-t1e7_2;
   dt2e7 = t2e7_1-t2e7_2;
   dt3e7 = t3e7_1-t3e7_2;


   Model Test: 
   0=dt1e1;
   0=dt1e4;
   0=dt3e4;
   0=dt1e5;
   0=dt3e5;

OUTPUT:
svalues;
